const SQUARE_SIZE = 20,RED = 0,GREEN = 1,BLUE = 2,image = [
  [
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
  ],
  [
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(50, 200, 50)',
    'rgb(50, 200, 50)',
    'rgb(50, 200, 50)',
    'rgb(50, 200, 50)',
    'rgb(50, 200, 50)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
  ],
  [
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(50, 200, 50)',
    'rgb(50, 200, 50)',
    'rgb(50, 200, 50)',
    'rgb(50, 200, 50)',
    'rgb(50, 200, 50)',
    'rgb(50, 200, 50)',
    'rgb(50, 200, 50)',
    'rgb(50, 200, 50)',
    'rgb(50, 200, 50)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
  ],
  [
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(100, 50, 0)',
    'rgb(100, 50, 0)',
    'rgb(100, 50, 0)',
    'rgb(255, 200, 150)',
    'rgb(255, 200, 150)',
    'rgb(0, 0, 0)',
    'rgb(255, 200, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
  ],
  [
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(100, 50, 0)',
    'rgb(255, 200, 150)',
    'rgb(100, 50, 0)',
    'rgb(255, 200, 150)',
    'rgb(255, 200, 150)',
    'rgb(255, 200, 150)',
    'rgb(0, 0, 0)',
    'rgb(255, 200, 150)',
    'rgb(255, 200, 150)',
    'rgb(255, 200, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
  ],
  [
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(100, 50, 0)',
    'rgb(255, 200, 150)',
    'rgb(100, 50, 0)',
    'rgb(100, 50, 0)',
    'rgb(255, 200, 150)',
    'rgb(255, 200, 150)',
    'rgb(255, 200, 150)',
    'rgb(0, 0, 0)',
    'rgb(255, 200, 150)',
    'rgb(255, 200, 150)',
    'rgb(255, 200, 150)',
    'rgb(150, 150, 150)',
  ],
  [
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(100, 50, 0)',
    'rgb(100, 50, 0)',
    'rgb(255, 200, 150)',
    'rgb(255, 200, 150)',
    'rgb(255, 200, 150)',
    'rgb(255, 200, 150)',
    'rgb(0, 0, 0)',
    'rgb(0, 0, 0)',
    'rgb(0, 0, 0)',
    'rgb(0, 0, 0)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
  ],
  [
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(255, 200, 150)',
    'rgb(255, 200, 150)',
    'rgb(255, 200, 150)',
    'rgb(255, 200, 150)',
    'rgb(255, 200, 150)',
    'rgb(255, 200, 150)',
    'rgb(255, 200, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
  ],
  [
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(50, 200, 50)',
    'rgb(50, 200, 50)',
    'rgb(0, 50, 180)',
    'rgb(50, 200, 50)',
    'rgb(50, 200, 50)',
    'rgb(50, 200, 50)',
    'rgb(50, 200, 50)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
  ],
  [
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(50, 200, 50)',
    'rgb(50, 200, 50)',
    'rgb(50, 200, 50)',
    'rgb(0, 50, 180)',
    'rgb(50, 200, 50)',
    'rgb(50, 200, 50)',
    'rgb(0, 50, 180)',
    'rgb(50, 200, 50)',
    'rgb(50, 200, 50)',
    'rgb(50, 200, 50)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
  ],
  [
    'rgb(150, 150, 150)',
    'rgb(50, 200, 50)',
    'rgb(50, 200, 50)',
    'rgb(50, 200, 50)',
    'rgb(50, 200, 50)',
    'rgb(0, 50, 180)',
    'rgb(0, 50, 180)',
    'rgb(0, 50, 180)',
    'rgb(0, 50, 180)',
    'rgb(50, 200, 50)',
    'rgb(50, 200, 50)',
    'rgb(50, 200, 50)',
    'rgb(50, 200, 50)',
    'rgb(150, 150, 150)',
  ],
  [
    'rgb(150, 150, 150)',
    'rgb(255, 255, 255)',
    'rgb(255, 255, 255)',
    'rgb(50, 200, 50)',
    'rgb(0, 50, 180)',
    'rgb(255, 255, 0)',
    'rgb(0, 50, 180)',
    'rgb(0, 50, 180)',
    'rgb(255, 255, 0)',
    'rgb(0, 50, 180)',
    'rgb(50, 200, 50)',
    'rgb(255, 255, 255)',
    'rgb(255, 255, 255)',
    'rgb(150, 150, 150)',
  ],
  [
    'rgb(150, 150, 150)',
    'rgb(255, 255, 255)',
    'rgb(255, 255, 255)',
    'rgb(255, 255, 255)',
    'rgb(0, 50, 180)',
    'rgb(0, 50, 180)',
    'rgb(0, 50, 180)',
    'rgb(0, 50, 180)',
    'rgb(0, 50, 180)',
    'rgb(0, 50, 180)',
    'rgb(255, 255, 255)',
    'rgb(255, 255, 255)',
    'rgb(255, 255, 255)',
    'rgb(150, 150, 150)',
  ],
  [
    'rgb(150, 150, 150)',
    'rgb(255, 255, 255)',
    'rgb(255, 255, 255)',
    'rgb(0, 50, 180)',
    'rgb(0, 50, 180)',
    'rgb(0, 50, 180)',
    'rgb(0, 50, 180)',
    'rgb(0, 50, 180)',
    'rgb(0, 50, 180)',
    'rgb(0, 50, 180)',
    'rgb(0, 50, 180)',
    'rgb(255, 255, 255)',
    'rgb(255, 255, 255)',
    'rgb(150, 150, 150)',
  ],
  [
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(0, 50, 180)',
    'rgb(0, 50, 180)',
    'rgb(0, 50, 180)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(0, 50, 180)',
    'rgb(0, 50, 180)',
    'rgb(0, 50, 180)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
  ],
  [
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(100, 50, 0)',
    'rgb(100, 50, 0)',
    'rgb(100, 50, 0)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(100, 50, 0)',
    'rgb(100, 50, 0)',
    'rgb(100, 50, 0)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
  ],
  [
    'rgb(150, 150, 150)',
    'rgb(100, 50, 0)',
    'rgb(100, 50, 0)',
    'rgb(100, 50, 0)',
    'rgb(100, 50, 0)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(150, 150, 150)',
    'rgb(100, 50, 0)',
    'rgb(100, 50, 0)',
    'rgb(100, 50, 0)',
    'rgb(100, 50, 0)',
    'rgb(150, 150, 150)',
  ],
],og                                                    = [];

for (let o of image) {
  let e = [];
  o.forEach(o => e.push(o)), og.push(e)
}
const render           = (e,r) => {
        for (let t = 0; t<r.length; t++) {
          for (let g = 0; g<r[t].length; g++) {
            const l = r[t][g];
            let padraig = document.createElement('div');
            padraig.className = 'square',
               padraig.style.left = `${SQUARE_SIZE * g}`,
               padraig.style.top = `${SQUARE_SIZE * t}`,
               padraig.style.backgroundColor = l;
            e.appendChild(padraig);
          }
        }
      },
      rgbStringToArray = e => {
        let r = e.substring(4,e.length - 1).replace(/ /g,'').split(',');
        return r[RED] = Number(r[RED]), r[GREEN] = Number(r[GREEN]), r[BLUE] = Number(r[BLUE]), r
      },
      rgbArrayToString = e => `rgb(${e[RED]},${e[GREEN]},${e[BLUE]})`,
      reset            = () => {
        for (let e = 0; e<image.length; e++) {
          for (let r = 0; r<image[e].length; r++) {
            image[e][r]
               = og[e][r]
          }
        }
      };