const r = [
    ["rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)"],
    ["rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)"],
    ["rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(150, 150, 150)", "rgb(150, 150, 150)"],
    ["rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(100, 50, 0)", "rgb(100, 50, 0)", "rgb(100, 50, 0)", "rgb(255, 200, 150)", "rgb(255, 200, 150)", "rgb(0, 0, 0)", "rgb(255, 200, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)"],
    ["rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(100, 50, 0)", "rgb(255, 200, 150)", "rgb(100, 50, 0)", "rgb(255, 200, 150)", "rgb(255, 200, 150)", "rgb(255, 200, 150)", "rgb(0, 0, 0)", "rgb(255, 200, 150)", "rgb(255, 200, 150)", "rgb(255, 200, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)"],
    ["rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(100, 50, 0)", "rgb(255, 200, 150)", "rgb(100, 50, 0)", "rgb(100, 50, 0)", "rgb(255, 200, 150)", "rgb(255, 200, 150)", "rgb(255, 200, 150)", "rgb(0, 0, 0)", "rgb(255, 200, 150)", "rgb(255, 200, 150)", "rgb(255, 200, 150)", "rgb(150, 150, 150)"],
    ["rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(100, 50, 0)", "rgb(100, 50, 0)", "rgb(255, 200, 150)", "rgb(255, 200, 150)", "rgb(255, 200, 150)", "rgb(255, 200, 150)", "rgb(0, 0, 0)", "rgb(0, 0, 0)", "rgb(0, 0, 0)", "rgb(0, 0, 0)", "rgb(150, 150, 150)", "rgb(150, 150, 150)"],
    ["rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(255, 200, 150)", "rgb(255, 200, 150)", "rgb(255, 200, 150)", "rgb(255, 200, 150)", "rgb(255, 200, 150)", "rgb(255, 200, 150)", "rgb(255, 200, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)"],
    ["rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(0, 50, 180)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)"],
    ["rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(0, 50, 180)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(0, 50, 180)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(150, 150, 150)", "rgb(150, 150, 150)"],
    ["rgb(150, 150, 150)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(0, 50, 180)", "rgb(0, 50, 180)", "rgb(0, 50, 180)", "rgb(0, 50, 180)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(150, 150, 150)"],
    ["rgb(150, 150, 150)", "rgb(255, 255, 255)", "rgb(255, 255, 255)", "rgb(50, 200, 50)", "rgb(0, 50, 180)", "rgb(255, 255, 0)", "rgb(0, 50, 180)", "rgb(0, 50, 180)", "rgb(255, 255, 0)", "rgb(0, 50, 180)", "rgb(50, 200, 50)", "rgb(255, 255, 255)", "rgb(255, 255, 255)", "rgb(150, 150, 150)"],
    ["rgb(150, 150, 150)", "rgb(255, 255, 255)", "rgb(255, 255, 255)", "rgb(255, 255, 255)", "rgb(0, 50, 180)", "rgb(0, 50, 180)", "rgb(0, 50, 180)", "rgb(0, 50, 180)", "rgb(0, 50, 180)", "rgb(0, 50, 180)", "rgb(255, 255, 255)", "rgb(255, 255, 255)", "rgb(255, 255, 255)", "rgb(150, 150, 150)"],
    ["rgb(150, 150, 150)", "rgb(255, 255, 255)", "rgb(255, 255, 255)", "rgb(0, 50, 180)", "rgb(0, 50, 180)", "rgb(0, 50, 180)", "rgb(0, 50, 180)", "rgb(0, 50, 180)", "rgb(0, 50, 180)", "rgb(0, 50, 180)", "rgb(0, 50, 180)", "rgb(255, 255, 255)", "rgb(255, 255, 255)", "rgb(150, 150, 150)"],
    ["rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(0, 50, 180)", "rgb(0, 50, 180)", "rgb(0, 50, 180)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(0, 50, 180)", "rgb(0, 50, 180)", "rgb(0, 50, 180)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)"],
    ["rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(100, 50, 0)", "rgb(100, 50, 0)", "rgb(100, 50, 0)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(100, 50, 0)", "rgb(100, 50, 0)", "rgb(100, 50, 0)", "rgb(150, 150, 150)", "rgb(150, 150, 150)"],
    ["rgb(150, 150, 150)", "rgb(100, 50, 0)", "rgb(100, 50, 0)", "rgb(100, 50, 0)", "rgb(100, 50, 0)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(100, 50, 0)", "rgb(100, 50, 0)", "rgb(100, 50, 0)", "rgb(100, 50, 0)", "rgb(150, 150, 150)"]
  ], b = [];
for (let g of r) {
  let r = [];
  g.forEach(b => r.push(b)), b.push(r)
}