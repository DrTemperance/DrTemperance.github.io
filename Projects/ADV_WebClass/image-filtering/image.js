const image = [
	[
		"rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)",
		"rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)"
	], [
		"rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)",
		"rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)",
		"rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)"
	], [
		"rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)",
		"rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)",
		"rgb(150, 150, 150)", "rgb(150, 150, 150)"
	], [
		"rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)",
		"rgb(100, 50, 0)", "rgb(100, 50, 0)", "rgb(100, 50, 0)",
		"rgb(255, 200, 150)", "rgb(255, 200, 150)",
		"rgb(0, 0, 0)",
		"rgb(255, 200, 150)",
		"rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)"
	], [
		"rgb(150, 150, 150)", "rgb(150, 150, 150)",
		"rgb(100, 50, 0)",
		"rgb(255, 200, 150)",
		"rgb(100, 50, 0)",
		"rgb(255, 200, 150)", "rgb(255, 200, 150)", "rgb(255, 200, 150)",
		"rgb(0, 0, 0)",
		"rgb(255, 200, 150)", "rgb(255, 200, 150)", "rgb(255, 200, 150)",
		"rgb(150, 150, 150)", "rgb(150, 150, 150)"
	], [
		"rgb(150, 150, 150)", "rgb(150, 150, 150)",
		"rgb(100, 50, 0)",
		"rgb(255, 200, 150)",
		"rgb(100, 50, 0)", "rgb(100, 50, 0)",
		"rgb(255, 200, 150)", "rgb(255, 200, 150)", "rgb(255, 200, 150)",
		"rgb(0, 0, 0)",
		"rgb(255, 200, 150)", "rgb(255, 200, 150)", "rgb(255, 200, 150)",
		"rgb(150, 150, 150)"
	], [
		"rgb(150, 150, 150)", "rgb(150, 150, 150)",
		"rgb(100, 50, 0)", "rgb(100, 50, 0)",
		"rgb(255, 200, 150)", "rgb(255, 200, 150)", "rgb(255, 200, 150)", "rgb(255, 200, 150)",
		"rgb(0, 0, 0)", "rgb(0, 0, 0)", "rgb(0, 0, 0)", "rgb(0, 0, 0)",
		"rgb(150, 150, 150)", "rgb(150, 150, 150)"
	], [
		"rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)",
		"rgb(255, 200, 150)", "rgb(255, 200, 150)", "rgb(255, 200, 150)", "rgb(255, 200, 150)", "rgb(255, 200, 150)", "rgb(255, 200, 150)", "rgb(255, 200, 150)",
		"rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)"
	], [
		"rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)",
		"rgb(50, 200, 50)", "rgb(50, 200, 50)",
		"rgb(0, 50, 180)",
		"rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)",
		"rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)"
	], [
		"rgb(150, 150, 150)", "rgb(150, 150, 150)",
		"rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)",
		"rgb(0, 50, 180)",
		"rgb(50, 200, 50)", "rgb(50, 200, 50)",
		"rgb(0, 50, 180)",
		"rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)",
		"rgb(150, 150, 150)", "rgb(150, 150, 150)"
	], [
		"rgb(150, 150, 150)",
		"rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)",
		"rgb(0, 50, 180)", "rgb(0, 50, 180)", "rgb(0, 50, 180)", "rgb(0, 50, 180)",
		"rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)", "rgb(50, 200, 50)",
		"rgb(150, 150, 150)"
	], [
		"rgb(150, 150, 150)",
		"rgb(255, 255, 255)", "rgb(255, 255, 255)",
		"rgb(50, 200, 50)",
		"rgb(0, 50, 180)",
		"rgb(255, 255, 0)",
		"rgb(0, 50, 180)", "rgb(0, 50, 180)",
		"rgb(255, 255, 0)",
		"rgb(0, 50, 180)",
		"rgb(50, 200, 50)",
		"rgb(255, 255, 255)", "rgb(255, 255, 255)",
		"rgb(150, 150, 150)"
	], [
		"rgb(150, 150, 150)",
		"rgb(255, 255, 255)", "rgb(255, 255, 255)", "rgb(255, 255, 255)",
		"rgb(0, 50, 180)", "rgb(0, 50, 180)", "rgb(0, 50, 180)", "rgb(0, 50, 180)", "rgb(0, 50, 180)", "rgb(0, 50, 180)",
		"rgb(255, 255, 255)", "rgb(255, 255, 255)", "rgb(255, 255, 255)",
		"rgb(150, 150, 150)"
	], [
		"rgb(150, 150, 150)",
		"rgb(255, 255, 255)", "rgb(255, 255, 255)",
		"rgb(0, 50, 180)", "rgb(0, 50, 180)", "rgb(0, 50, 180)", "rgb(0, 50, 180)", "rgb(0, 50, 180)", "rgb(0, 50, 180)", "rgb(0, 50, 180)", "rgb(0, 50, 180)",
		"rgb(255, 255, 255)", "rgb(255, 255, 255)",
		"rgb(150, 150, 150)"
	], [
		"rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)",
		"rgb(0, 50, 180)", "rgb(0, 50, 180)", "rgb(0, 50, 180)",
		"rgb(150, 150, 150)", "rgb(150, 150, 150)",
		"rgb(0, 50, 180)", "rgb(0, 50, 180)", "rgb(0, 50, 180)",
		"rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)"
	], [
		"rgb(150, 150, 150)", "rgb(150, 150, 150)",
		"rgb(100, 50, 0)", "rgb(100, 50, 0)", "rgb(100, 50, 0)",
		"rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)",
		"rgb(100, 50, 0)", "rgb(100, 50, 0)", "rgb(100, 50, 0)",
		"rgb(150, 150, 150)", "rgb(150, 150, 150)"
	], [
		"rgb(150, 150, 150)",
		"rgb(100, 50, 0)", "rgb(100, 50, 0)", "rgb(100, 50, 0)", "rgb(100, 50, 0)",
		"rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)", "rgb(150, 150, 150)",
		"rgb(100, 50, 0)", "rgb(100, 50, 0)", "rgb(100, 50, 0)", "rgb(100, 50, 0)",
		"rgb(150, 150, 150)"
	]
];

const og = [];

for (const Element of image) {
	let T = [];
	for (let J = 0; J<Element.length; J++) T.push(Element[J]);
	og.push(T);
}

function Render (element, image) {
	for (let R = 0; R<image.length; R++) {
		for (let C = 0; C<image[R].length; C++) {
			const Square = document.createElement('div');
			Square.classList.add('square');
			Square.style.left = `${C * 20}px`;
			Square.style.top = `${R * 20}px`;
			Square.style.backgroundColor = image[R][C];
			element.appendChild(Square);
		}
	}
}

function Rgb_String_To_Array (RgbStr) {
	let RGB_Ar = RgbStr.substring(4, RgbStr.length - 1).replace(/ /g, '').split(',');

	RGB_Ar[0] = Number(RGB_Ar[0]);
	RGB_Ar[1] = Number(RGB_Ar[1]);
	RGB_Ar[2] = Number(RGB_Ar[2]);

	return RGB_Ar;
}

function Reset () {for (let i = 0; i<image.length; i++) for (let j = 0; j<image[i].length; j++) image[i][j] = og[i][j];}